# data source
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${db.url}:5432/banco_proposta?useTimezone=true&serverTimezone=America/Sao_Paulo
spring.datasource.username=keycloak
spring.datasource.password=password

# jpa
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update


db.url=${DB_URL:localhost}
api.analise=${URL_ANALISE:http://localhost:9999/api}
api.cartao=${URL_CARTAO:http://localhost:8888/api}

feign.httpclient.connection-timeout=5000
server.port=8081

server.error.include-message=always


spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true


# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=propostas

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

#opentracing.spring.cloud.jdbc.enabled=false